<style>
    html, body {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        margin: 0;
        padding: 0;
    }

    #renderCanvas {
        position: fixed;        
        left: 0;
        width: 100%;
        top: 0;
        height: 100%;        
    }
    
</style>

@section scripts
{
    <script type="text/javascript">

    var viewer3d = {
        canvas: document.getElementById("renderCanvas"),
        engine: "",
        scene: "",

        getContainerData: function () {
            var self = this;
            $.ajax({
                type: "GET",
                url: "http://localhost:53675/api/container/" + "@(ViewBag.ContainerId)",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {                    
                    var container = response.containers[0];
                    self.engine = new BABYLON.Engine(self.canvas, true);
                    self.scene = new BABYLON.Scene(self.engine);
                    var distance = Math.max(container.width, container.height, container.depth) * 2;
                    self.createScene(self.canvas, self.scene, distance);
                    self.drawContainer(container, self.scene);
                    self.engine.runRenderLoop(function () {
                        self.scene.render();
                    });
                },
                error: function (err) {
                    alert(JSON.stringify(err));
                }
            });
        },

        createScene: function(canvas, scene, distance) {            
            scene.clearColor = new BABYLON.Color3(200, 200, 255);
            var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 1, 0.8, distance, new BABYLON.Vector3(0, 0, 0), scene);
            camera.attachControl(canvas, false);
            var light0 = new BABYLON.PointLight("Omni0", new BABYLON.Vector3(100, 100, 80), scene);
            var light1 = new BABYLON.PointLight("Omni1", new BABYLON.Vector3(-80, 130, -100), scene);
            var light2 = new BABYLON.PointLight("Omni2", new BABYLON.Vector3(30, -90, 10), scene);

            light0.intensity = 1;
            light1.intensity = 1;
            light2.intensity = 1;
            light0.parent = camera;
            light1.parent = camera;
            light2.parent = camera;
        },

        drawContainer: function (container, scene) {       
            
            var containerMesh = new BABYLON.Mesh.CreateBox("containerMesh", 1, scene);
            containerMesh.scaling.x = container.width + 0.01;
            containerMesh.scaling.y = container.height + 0.01;
            containerMesh.scaling.z = container.depth + 0.01;
            
            var containerMaterial = new BABYLON.StandardMaterial("containerMaterial", scene);
            containerMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);
            containerMaterial.specularColor = new BABYLON.Color3(0, 0, 0);
            containerMaterial.alpha = 0.2;
            containerMesh.material = containerMaterial;

            for(var i = 0; i < container.boxes.length; i++)
            {
                var boxMesh = new BABYLON.Mesh.CreateBox("boxMesh", 1, scene);
                boxMesh.scaling.x = container.boxes[i].width;
                boxMesh.scaling.y = container.boxes[i].height;
                boxMesh.scaling.z = container.boxes[i].depth;
                boxMesh.position.x = container.boxes[i].x - container.width / 2 + container.boxes[i].width / 2;
                boxMesh.position.y = container.boxes[i].y - container.height / 2 + container.boxes[i].height / 2;
                boxMesh.position.z = container.boxes[i].z - container.depth / 2 + container.boxes[i].depth / 2;
                var boxMaterial = new BABYLON.StandardMaterial("boxMaterial", scene);
                boxMaterial.diffuseColor = new BABYLON.Color3(Math.random(), Math.random(), Math.random());
                boxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);
                boxMesh.material = boxMaterial;
            }
        }
    };

    $(function () {
        viewer3d.getContainerData();
    });

</script>
}

<canvas id="renderCanvas"></canvas>